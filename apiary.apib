FORMAT: 1A
HOST: https://threadable.com/

# Threadable
Threadable is a *better mailing list* for group discussions. This API lets you control it from your application!

# Not done yet!
The Threadable API is a work-in-progress. We'll try to avoid breaking changes, of course, but you can expect
it to evolve a lot in the coming months.

If you're using this api, let us know! Drop us an email at hello@threadable.com

# Authentication
To authenticate, you need a token. Get the token from your user profile page, https://threadable.com/profile

At the bottom of the page, there's an API token section. Hit generate, and you'll get an access token.

Then just append your token to the request. For instance, if you wanted to get the current user,
`https://threadable.com/api/users/current.json?access_token=YOUR_TOKEN_HERE`

You can also put the token in the `Access-Token:` HTTP header on your request. Use this method if you'd like to
query the API with Apiary.

**Be careful with your token**, since it confers access to your Threadable account. If you ever need to revoke
it, just hit the *Regenerate* button and you'll get a new one.

*Oauth2 coming soon!*

# Group Organizations
An Organization can contain many groups, conversations, and messages. A user can be a member of many organizations.

## Organizations Collection [/api/organizations]
### List all Organizations [GET]
+ Response 200 (application/json)

        {
          "organizations":[
            {
              "id":3,
              "param":"raceteam",
              "name":"UCSD Electric Racing",
              "short_name":"RaceTeam",
              "slug":"raceteam",
              "subject_tag":"RaceTeam",
              "description":"Senior engineering electric race team!",
              "has_held_messages":false,
              "trusted":true,
              "email_address_username":"raceteam",
              "email_address":"raceteam@threadable.com",
              "task_email_address":"raceteam+task@threadable.com",
              "formatted_email_address":"UCSD Electric Racing \u003craceteam@threadable.com\u003e",
              "formatted_task_email_address":"UCSD Electric Racing Tasks \u003craceteam+task@threadable.com\u003e",
              "groups":[
                {
                  "id":8,
                  "slug":"press",
                  "name":"Press",
                  "email_address_tag":"press",
                  "subject_tag":"RaceTeam+Press",
                  "color":"#e67e22",
                  "auto_join":false,
                  "hold_messages":true,
                  "alias_email_address":"Press Enquiries \u003cpress@ucsd.example.com\u003e",
                  "webhook_url":"",
                  "email_address":"press@ucsd.example.com",
                  "task_email_address":"press-task@ucsd.example.com",
                  "formatted_email_address":"Press Enquiries \u003cpress@ucsd.example.com\u003e",
                  "formatted_task_email_address":"Press Enquiries Tasks \u003cpress-task@ucsd.example.com\u003e",
                  "internal_email_address":"raceteam+press@threadable.com",
                  "internal_task_email_address":"raceteam+press+task@threadable.com",
                  "conversations_count":0,
                  "members_count":2,
                  "organization_slug":"raceteam",
                  "current_user_is_a_member":false
                },
                {
                  "id":7,
                  "slug":"graphic-design",
                  "name":"Graphic Design",
                  "email_address_tag":"graphic-design",
                  "subject_tag":"RaceTeam+Graphic Design",
                  "color":"#f2ad40",
                  "auto_join":true,
                  "hold_messages":true,
                  "alias_email_address":"",
                  "webhook_url":"",
                  "email_address":"raceteam+graphic-design@threadable.com",
                  "task_email_address":"raceteam+graphic-design+task@threadable.com",
                  "formatted_email_address":"\"UCSD Electric Racing: Graphic Design\" \u003craceteam+graphic-design@threadable.com\u003e",
                  "formatted_task_email_address":"\"UCSD Electric Racing: Graphic Design Tasks\" \u003craceteam+graphic-design+task@threadable.com\u003e",
                  "internal_email_address":"raceteam+graphic-design@threadable.com",
                  "internal_task_email_address":"raceteam+graphic-design+task@threadable.com",
                  "conversations_count":1,
                  "members_count":9,
                  "organization_slug":"raceteam",
                  "current_user_is_a_member":false
                }
              ]
            }
          ]
        }

## Organization [/api/organizations/{id}]
A single Organization object with all its details.

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Organization to perform action with.

### Retrieve an Organization [GET]
+ Response 200 (application/json)

        {
          "id":3,
          "param":"raceteam",
          "name":"UCSD Electric Racing",
          "short_name":"RaceTeam",
          "slug":"raceteam",
          "subject_tag":"RaceTeam",
          "description":"Senior engineering electric race team!",
          "has_held_messages":false,
          "trusted":true,
          "email_address_username":"raceteam",
          "email_address":"raceteam@threadable.com",
          "task_email_address":"raceteam+task@threadable.com",
          "formatted_email_address":"UCSD Electric Racing \u003craceteam@threadable.com\u003e",
          "formatted_task_email_address":"UCSD Electric Racing Tasks \u003craceteam+task@threadable.com\u003e",
          "groups":[
            {
              "id":8,
              "slug":"press",
              "name":"Press",
              "email_address_tag":"press",
              "subject_tag":"RaceTeam+Press",
              "color":"#e67e22",
              "auto_join":false,
              "hold_messages":true,
              "alias_email_address":"Press Enquiries \u003cpress@ucsd.example.com\u003e",
              "webhook_url":"",
              "email_address":"press@ucsd.example.com",
              "task_email_address":"press-task@ucsd.example.com",
              "formatted_email_address":"Press Enquiries \u003cpress@ucsd.example.com\u003e",
              "formatted_task_email_address":"Press Enquiries Tasks \u003cpress-task@ucsd.example.com\u003e",
              "internal_email_address":"raceteam+press@threadable.com",
              "internal_task_email_address":"raceteam+press+task@threadable.com",
              "conversations_count":0,
              "members_count":2,
              "organization_slug":"raceteam",
              "current_user_is_a_member":false
            },
            {
              "id":7,
              "slug":"graphic-design",
              "name":"Graphic Design",
              "email_address_tag":"graphic-design",
              "subject_tag":"RaceTeam+Graphic Design",
              "color":"#f2ad40",
              "auto_join":true,
              "hold_messages":true,
              "alias_email_address":"",
              "webhook_url":"",
              "email_address":"raceteam+graphic-design@threadable.com",
              "task_email_address":"raceteam+graphic-design+task@threadable.com",
              "formatted_email_address":"\"UCSD Electric Racing: Graphic Design\" \u003craceteam+graphic-design@threadable.com\u003e",
              "formatted_task_email_address":"\"UCSD Electric Racing: Graphic Design Tasks\" \u003craceteam+graphic-design+task@threadable.com\u003e",
              "internal_email_address":"raceteam+graphic-design@threadable.com",
              "internal_task_email_address":"raceteam+graphic-design+task@threadable.com",
              "conversations_count":1,
              "members_count":9,
              "organization_slug":"raceteam",
              "current_user_is_a_member":false
            }
          ]
        }

# Group Groups

## Groups collection [/api/groups]
### Create a Group [POST]
+ Request (application/json)

        {
          "group":{
            "name":"Graphic Design",
            "email_address_tag":"graphic-design",
            "subject_tag":"Design",
            "color":"#D35400",
            "auto_join":false,
            "hold_messages":false
          },
          "organization_id":"raceteam"
        }

+ Response 201 (application/json)

        {
          "id":7,
          "slug":"graphic-design",
          "name":"Graphic Design",
          "email_address_tag":"graphic-design",
          "subject_tag":"RaceTeam+Graphic Design",
          "color":"#f2ad40",
          "auto_join":true,
          "hold_messages":true,
          "alias_email_address":"",
          "webhook_url":"",
          "email_address":"raceteam+graphic-design@threadable.com",
          "task_email_address":"raceteam+graphic-design+task@threadable.com",
          "formatted_email_address":"\"UCSD Electric Racing: Graphic Design\" \u003craceteam+graphic-design@threadable.com\u003e",
          "formatted_task_email_address":"\"UCSD Electric Racing: Graphic Design Tasks\" \u003craceteam+graphic-design+task@threadable.com\u003e",
          "internal_email_address":"raceteam+graphic-design@threadable.com",
          "internal_task_email_address":"raceteam+graphic-design+task@threadable.com",
          "conversations_count":1,
          "members_count":9,
          "organization_slug":"raceteam",
          "current_user_is_a_member":false
        }

## Group [/api/groups/{id}]
A single Group object with all its details

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Group to perform action with.

### Retrieve a Group [GET]
+ Response 200 (application/json)

        {
          "id":7,
          "slug":"graphic-design",
          "name":"Graphic Design",
          "email_address_tag":"graphic-design",
          "subject_tag":"RaceTeam+Graphic Design",
          "color":"#f2ad40",
          "auto_join":true,
          "hold_messages":true,
          "alias_email_address":"",
          "webhook_url":"",
          "email_address":"raceteam+graphic-design@threadable.com",
          "task_email_address":"raceteam+graphic-design+task@threadable.com",
          "formatted_email_address":"\"UCSD Electric Racing: Graphic Design\" \u003craceteam+graphic-design@threadable.com\u003e",
          "formatted_task_email_address":"\"UCSD Electric Racing: Graphic Design Tasks\" \u003craceteam+graphic-design+task@threadable.com\u003e",
          "internal_email_address":"raceteam+graphic-design@threadable.com",
          "internal_task_email_address":"raceteam+graphic-design+task@threadable.com",
          "conversations_count":1,
          "members_count":9,
          "organization_slug":"raceteam",
          "current_user_is_a_member":false
        }

### Update a Group [PUT]
+ Request (application/json)

        {
          "group":{
            "subject_tag":"Design",
            "color":"#D35400",
            "auto_join":false,
            "hold_messages":false,
            "alias_email_address":"Design Team \u003cdesign@ucsd.example.com\u003e",
            "webhool_url":"http://example.com/hookreceiver"
          },
          "organization_id":"raceteam"
        }

+ Response 201 (application/json)

        {
          "id":7,
          "slug":"graphic-design",
          "name":"Graphic Design",
          "email_address_tag":"graphic-design",
          "subject_tag":"RaceTeam+Graphic Design",
          "color":"#f2ad40",
          "auto_join":true,
          "hold_messages":true,
          "alias_email_address":"Design Team \u003cdesign@ucsd.example.com\u003e",
          "webhool_url":"http://example.com/hookreceiver",
          "email_address":"raceteam+graphic-design@threadable.com",
          "task_email_address":"raceteam+graphic-design+task@threadable.com",
          "formatted_email_address":"\"UCSD Electric Racing: Graphic Design\" \u003craceteam+graphic-design@threadable.com\u003e",
          "formatted_task_email_address":"\"UCSD Electric Racing: Graphic Design Tasks\" \u003craceteam+graphic-design+task@threadable.com\u003e",
          "internal_email_address":"raceteam+graphic-design@threadable.com",
          "internal_task_email_address":"raceteam+graphic-design+task@threadable.com",
          "conversations_count":1,
          "members_count":9,
          "organization_slug":"raceteam",
          "current_user_is_a_member":false
        }

### Remove a Group [DELETE]
+ Response 204

## Group join action [/api/groups/{id}/join]
Add the current user to a group

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Group to perform action with.

### Join a Group [POST]
+ Request

        (empty)

+ Response 200 (application/json)

        {
          "id":7,
          "slug":"graphic-design",
          "name":"Graphic Design",
          "email_address_tag":"graphic-design",
          "subject_tag":"RaceTeam+Graphic Design",
          "color":"#f2ad40",
          "auto_join":true,
          "hold_messages":true,
          "alias_email_address":"",
          "webhook_url":"",
          "email_address":"raceteam+graphic-design@threadable.com",
          "task_email_address":"raceteam+graphic-design+task@threadable.com",
          "formatted_email_address":"\"UCSD Electric Racing: Graphic Design\" \u003craceteam+graphic-design@threadable.com\u003e",
          "formatted_task_email_address":"\"UCSD Electric Racing: Graphic Design Tasks\" \u003craceteam+graphic-design+task@threadable.com\u003e",
          "internal_email_address":"raceteam+graphic-design@threadable.com",
          "internal_task_email_address":"raceteam+graphic-design+task@threadable.com",
          "conversations_count":1,
          "members_count":9,
          "organization_slug":"raceteam",
          "current_user_is_a_member":false
        }

## Group leave action [/api/groups/{id}/leave]
Remove the current user from a group

+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Group to perform action with.

### Leave a Group [POST]
+ Request

        (empty)

+ Response 200 (application/json)

        {
          "id":7,
          "slug":"graphic-design",
          "name":"Graphic Design",
          "email_address_tag":"graphic-design",
          "subject_tag":"RaceTeam+Graphic Design",
          "color":"#f2ad40",
          "auto_join":true,
          "hold_messages":true,
          "alias_email_address":"",
          "webhook_url":"",
          "email_address":"raceteam+graphic-design@threadable.com",
          "task_email_address":"raceteam+graphic-design+task@threadable.com",
          "formatted_email_address":"\"UCSD Electric Racing: Graphic Design\" \u003craceteam+graphic-design@threadable.com\u003e",
          "formatted_task_email_address":"\"UCSD Electric Racing: Graphic Design Tasks\" \u003craceteam+graphic-design+task@threadable.com\u003e",
          "internal_email_address":"raceteam+graphic-design@threadable.com",
          "internal_task_email_address":"raceteam+graphic-design+task@threadable.com",
          "conversations_count":1,
          "members_count":9,
          "organization_slug":"raceteam",
          "current_user_is_a_member":false
        }


# Group Conversations

## Conversations Collection [/api/conversations?organization={organization}&group={group}&scope={scope}&page={page}]

+ Parameters
    + organization (required, string, `sfhealth`) ... String slug of the Organization to perform action with.
    + group (required, string, `triage`) ... Group slug. Special slugs: `my` (all the user's subscribed groups), `ungrouped` (conversations with no group)
    + scope (optional, string, `not-done-tasks`) ... Which type of messages to fetch. Valid scopes: `muted_conversations`, `not_muted_conversations`, `done_tasks`, `not_done_tasks`, `done_doing_tasks`, `not_done_doing_tasks`
    + page (optional, numeric, `0`) ... The page of results to return

### List all Conversations [GET]
+ Response 200 (application/json)

        {
          "conversations":[
            {
              "id":51,
              "slug":"inventory-led-supplies",
              "organization_slug":"raceteam",
              "subject":"inventory led supplies",
              "task":true,
              "created_at":"2014-02-02T19:10:58.850Z",
              "updated_at":"2014-02-02T19:41:14.719Z",
              "last_message_at":"2014-02-02T19:12:57.798Z",
              "participant_names":[
                "Alice", "Bob"
              ],
              "number_of_messages":1,
              "message_summary":"Cars need lights, so lets get a sense of our led si",
              "group_ids":[
                5,
                7,
                6
              ],
              "doers":[

              ],
              "doing":false,
              "done_at":null,
              "done":false,
              "position":10,
              "muted":false
            },
            {
              "id":47,
              "slug":"get-some-4-gauge-wire",
              "organization_slug":"raceteam",
              "subject":"get some 4 gauge wire",
              "task":true,
              "created_at":"2014-02-02T13:48:39.805Z",
              "updated_at":"2014-02-02T13:54:32.417Z",
              "last_message_at":null,
              "participant_names":[
                "Alice"
              ],
              "number_of_messages":0,
              "message_summary":null,
              "group_ids":[
                5,
                6
              ],
              "doers":[

              ],
              "doing":false,
              "done_at":null,
              "done":false,
              "position":9,
              "muted":false
            }
          ]
        }

### Create a conversation [POST]
+ Request (application/json)

        {
          "conversation":{
            "subject":"Fundraiser party",
            "task":false,
            "group_ids":[
              6
            ],
          },
          "organization_id":"raceteam"
        }

+ Response 201 (application/json)

        {
          "conversation":{
            "id":52,
            "slug":"fundraiser-party",
            "organization_slug":"raceteam",
            "subject":"Fundraiser party",
            "task":false,
            "created_at":"2014-04-16T23:18:32.012Z",
            "updated_at":"2014-04-16T23:18:32.331Z",
            "last_message_at":null,
            "participant_names":[
              "Darth"
            ],
            "number_of_messages":0,
            "message_summary":null,
            "group_ids":[
              6
            ],
            "doers":[

            ],
            "doing":null,
            "done_at":null,
            "done":null,
            "position":-1,
            "muted":false
          }
        }

### Update a Conversation [PUT]
+ Request (application/json)

        {
          "conversation":{
            "id":32,
            "task":true,
            "group_ids":[
              6,
              8
            ]
          },
          "organization_id":"raceteam"
        }

+ Response 201 (application/json)

        {
          "conversation":{
            "id":32,
            "slug":"fundraiser-party",
            "organization_slug":"raceteam",
            "subject":"Fundraiser party",
            "task":true,
            "created_at":"2014-04-16T23:18:32.012Z",
            "updated_at":"2014-04-16T23:18:32.331Z",
            "last_message_at":null,
            "participant_names":[
              "Darth"
            ],
            "number_of_messages":0,
            "message_summary":null,
            "group_ids":[
              6,
              8
            ],
            "doers":[],
            "doing":null,
            "done_at":null,
            "done":null,
            "position":-1,
            "muted":false
          }
        }

## Conversations Search [/api/conversations/search?organization_id={organization_id}&q={q}&group={group}]

+ Parameters
    + organization_id (required, number, `2`) ... Numeric `id` of the Organization to perform action with.
    + q (required, string, `donuts`) ... String for which to query.
    + group (required, string, `electronics`) ... Group slug. Special slugs: `my` (all the user's subscribed groups), `ungrouped` (conversations with no group)

### List Conversations matching query [GET]

+ Response 200 (application/json)

        {
          "conversations":[
            {
              "id":52,
              "slug":"fundraiser-party",
              "organization_slug":"raceteam",
              "subject":"Fundraiser Party",
              "task":false,
              "created_at":"2014-02-28T18:58:47.384Z",
              "updated_at":"2014-04-22T21:23:37.927Z",
              "last_message_at":"2014-04-22T21:22:10.147Z",
              "participant_names":[
                "Darth",
                "Joe",
                "Nicole"
              ],
              "number_of_messages":5,
              "message_summary":"let's do this next wednesday. i have the perfect venue for",
              "group_ids":[
                6,
              ],
              "doers":[

              ],
              "doing":null,
              "done_at":null,
              "done":null,
              "position":-1,
              "muted":false
            }
          ]
        }

# Group Events
A conversation has many events. Some events are simple, like adding or removing a group.
Other events are more complex, like composing a message. Each event record will include
associated records. So, a Composed Message event will include the message, which will
in turn include links to that message's attachments.

Event types: `conversation_created`, `conversation_added_group`, `conversation_removed_group`, `created_message`, `task_created`, `task_done`, `task_added_doer`, `task_undone`, `task_removed_doer`

## Events Collection [/api/events?organization_id={organization_id}&conversation_id={conversation_id}]

+ Parameters
    + organization_id (required, string, `sfhealth`) ... String slug of the Organization to perform action with.
    + conversation_id (required, string, `look-at-these-adorable-corgis`) ... String slug of the Conversation for which to retrieve events.

### Fetch events for a Conversation [GET]
+ Response 200 (application/json)

        {
          "events":[
            {
              "id":43,
              "event_type":"conversation_created",
              "actor":"Stephen Maturin",
              "doer":null,
              "group":null,
              "created_at":"2014-04-24T15:16:46.907Z",
              "message":null
            },
            {
              "id":"message-24",
              "event_type":"created_message",
              "actor":"Stephen Maturin",
              "doer":null,
              "group":null,
              "created_at":"2014-04-24T15:18:05.000Z",
              "message":{
                "id":24,
                "unique_id":"PDUzNTkyYjJjOTA0Y2NfMTQ0MTMzZmU5YzkwNWU2ZTQyODI3N0BleGFtcGxlLmNvbT4=",
                "from":"Stephen Maturin \u003csmaturin@sfhealth.example.com\u003e",
                "subject":"Look at these adorable corgis!",
                "body":"This is simply absurd.",
                "body_stripped":"This is simply absurd.",
                "message_id_header":"\u003c53592b2c904cc_144133fe9c905e6e428277@example.com\u003e",
                "references_header":null,
                "date_header":"Thu, 24 Apr 2014 15:18:05 -0000",
                "html":false,
                "root":true,
                "shareworthy":false,
                "knowledge":false,
                "created_at":"2014-04-24T15:18:26.478Z",
                "sent_at":"2014-04-24T15:18:05.000Z",
                "parent_message_id":null,
                "avatar_url":"/fixture_images/stephen.jpg",
                "sender_name":"Stephen Maturin",
                "attachments":[
                  {
                    "url":"/storage/development/9aca244b-639d-46b4-9618-53736042bf12/some.gif",
                    "filename":"corgis.gif",
                    "mimetype":"image/gif",
                    "size":1829,
                    "content_id":"\u003csomegifcontentid\u003e"
                  }
                ]
              }
            },
            {
              "id":"message-25",
              "event_type":"created_message",
              "actor":"Ritsuko Akagi",
              "doer":null,
              "group":null,
              "created_at":"2014-04-24T16:18:42.000Z",
              "message":{
                "id":25,
                "unique_id":"PDUzNTkzOTYxM2E0M2JfMTQ0MTMzZmU5YzkwNWU2ZTQyODNlOEBleGFtcGxlLmNvbT4=",
                "from":"Ritsuko Akagi \u003critsuko@sfhealth.example.com\u003e",
                "subject":"Look at these adorable corgis!",
                "body":"We claim this stick in the name of England and Queen Elizabeth! And more!",
                "body_stripped":"We claim this stick in the name of England and Queen Elizabeth!",
                "message_id_header":"\u003c535939613a43b_144133fe9c905e6e4283e8@example.com\u003e",
                "references_header":"\u003c53592b2c904cc_144133fe9c905e6e428277@example.com\u003e",
                "date_header":"Thu, 24 Apr 2014 16:18:42 -0000",
                "html":false,
                "root":false,
                "shareworthy":false,
                "knowledge":false,
                "created_at":"2014-04-24T16:18:58.928Z",
                "sent_at":"2014-04-24T16:18:42.000Z",
                "parent_message_id":24,
                "avatar_url":"/fixture_images/ritsuko.jpg",
                "sender_name":"Ritsuko Akagi",
                "attachments":[]
              }
            }
          ]
        }



# Group Messages
When creating a message, make sure to first create the conversation that the message lives in.

## Messages Collection [/api/messages]
### Create a Message [POST]
+ Request (application/json)

        {
          "message":{
            "conversation_id":33,
            "conversation_slug":"lets-make-breakfast",
            "organization_slug":"sfhealth",
            "subject":"Let's make breakfast",
            "body_plain":"I have everything we need for pancakes. We could also make biscuits.",
            "body_html":"<p>I have everything we need for pancakes. We could also make biscuits.</p>",
            "html":false
          },
          "organization_id":"sfhealth"
        }

+ Response 201 (application/json)

        {
          "message":{
            "id":27,
            "unique_id":"PDUzNjY5ODRjODYyNjRfODZjMDNmZWIwODg2NzBlNDU1NmVmQGxvY2FsaG9zdD4=",
            "from":"Ian Baker \u003cian@threadable.com\u003e",
            "subject":"Let's make breakfast",
            "body":"\u003cp\u003eI have everything we need for pancakes. We could also make biscuits.\u003c/p\u003e",
            "body_stripped":"\u003cp\u003eI have everything we need for pancakes. We could also make biscuits.\u003c/p\u003e",
            "message_id_header":"\u003c5366984c86264_86c03feb088670e4556ef@threadable.com\u003e",
            "references_header":null,
            "date_header":"Sun, 04 May 2014 19:43:08 -0000",
            "html":true,
            "root":true,
            "shareworthy":false,
            "knowledge":false,
            "created_at":"2014-05-04T19:43:08.551Z",
            "sent_at":"2014-05-04T19:43:08.000Z",
            "parent_message_id":null,
            "avatar_url":"//gravatar.com/avatar/e792b3a504932f24c669684b64c5edc9.png?s=70\u0026d=retro",
            "sender_name":"Ian Baker",
            "attachments":[

            ],
            "conversation":{
              "id":33,
              "slug":"lets-make-breakfast",
              "organization_slug":"sfhealth",
              "subject":"Let's make breakfast",
              "task":false,
              "created_at":"2014-05-04T19:43:08.269Z",
              "updated_at":"2014-05-04T19:43:25.940Z",
              "last_message_at":"2014-05-04T19:43:08.551Z",
              "participant_names":[
                "Ian"
              ],
              "number_of_messages":1,
              "message_summary":"I have everything we need for pancakes. We could al",
              "group_ids":[
                1
              ],
              "doers":[]
              "doing":null,
              "done_at":null,
              "done":null,
              "position":-1,
              "muted":false
            }
          }
        }

# Group Current User
The current user record tells you about your own account. It also contains links to all of
the current user's groups.

## Current User [/api/users/current]

### Fetch the current user [GET]
+ Response 200 (application/json)

        {
          "user":{
            "id":"current",
            "user_id":3,
            "param":"ian-baker",
            "name":"Ian Baker",
            "email_address":"ian@other.io",
            "slug":"ian-baker",
            "avatar_url":"//gravatar.com/avatar/e792b3a504932f24c669684b64c5edc9.png?s=70\u0026d=retro",
            "external_authorizations":[],
            "current_organization_id":2,
            "organizations":[
              {
                "id":1,
                "param":"raceteam",
                "name":"Electric Race Car Team",
                "short_name":"raceteam",
                "slug":"raceteam",
                "subject_tag":"raceteam",
                "description":"Senior engineering electric race car team!",
                "has_held_messages":false,
                "trusted":false,
                "email_address_username":"raceteam",
                "email_address":"raceteam@threadable.com",
                "task_email_address":"raceteam+task@threadable.com",
                "formatted_email_address":"Other Admins \u003craceteam@threadable.com\u003e",
                "formatted_task_email_address":"Other Admins Tasks \u003craceteam+task@threadable.com\u003e",
                "groups":[]
              },
              {
                "id":2,
                "param":"sfhealth",
                "name":"SF Health Center",
                "short_name":"SFHealth",
                "slug":"sfhealth",
                "subject_tag":"SFHealth",
                "description":"San Francisco Health Center",
                "has_held_messages":false,
                "trusted":false,
                "email_address_username":"sfhealth",
                "email_address":"sfhealth@threadable.com",
                "task_email_address":"sfhealth+task@threadable.com",
                "formatted_email_address":"SF Health Center \u003csfhealth@threadable.com\u003e",
                "formatted_task_email_address":"SF Health Center Tasks \u003csfhealth+task@threadable.com\u003e",
                "groups":[
                  {
                    "id":4,
                    "slug":"cardiology",
                    "name":"Cardiology",
                    "email_address_tag":"cardiology",
                    "subject_tag":"SFHealth+Cardiology",
                    "color":"#d94876",
                    "auto_join":false,
                    "hold_messages":true,
                    "alias_email_address":"",
                    "webhook_url":"",
                    "email_address":"sfhealth+cardiology@threadable.com",
                    "task_email_address":"sfhealth+cardiology+task@threadable.com",
                    "formatted_email_address":"\"SF Health Center: Cardiology\" \u003csfhealth+cardiology@threadable.com\u003e",
                    "formatted_task_email_address":"\"SF Health Center: Cardiology Tasks\" \u003csfhealth+cardiology+task@threadable.com\u003e",
                    "internal_email_address":"sfhealth+cardiology@threadable.com",
                    "internal_task_email_address":"sfhealth+cardiology+task@threadable.com",
                    "conversations_count":1,
                    "members_count":6,
                    "organization_slug":"sfhealth",
                    "current_user_is_a_member":false
                  },
                  {
                    "id":3,
                    "slug":"anesthiology",
                    "name":"Anesthiology",
                    "email_address_tag":"anesthiology",
                    "subject_tag":"SFHealth+Anesthiology",
                    "color":"#f2ad40",
                    "auto_join":false,
                    "hold_messages":true,
                    "alias_email_address":"",
                    "webhook_url":"",
                    "email_address":"sfhealth+anesthiology@threadable.com",
                    "task_email_address":"sfhealth+anesthiology+task@threadable.com",
                    "formatted_email_address":"\"SF Health Center: Anesthiology\" \u003csfhealth+anesthiology@threadable.com\u003e",
                    "formatted_task_email_address":"\"SF Health Center: Anesthiology Tasks\" \u003csfhealth+anesthiology+task@threadable.com\u003e",
                    "internal_email_address":"sfhealth+anesthiology@threadable.com",
                    "internal_task_email_address":"sfhealth+anesthiology+task@threadable.com",
                    "conversations_count":2,
                    "members_count":6,
                    "organization_slug":"sfhealth",
                    "current_user_is_a_member":false
                  },
                  {
                    "id":2,
                    "slug":"triage",
                    "name":"Triage",
                    "email_address_tag":"triage",
                    "subject_tag":"SFHealth+Triage",
                    "color":"#5a9de1",
                    "auto_join":false,
                    "hold_messages":true,
                    "alias_email_address":"",
                    "webhook_url":"",
                    "email_address":"sfhealth+triage@threadable.com",
                    "task_email_address":"sfhealth+triage+task@threadable.com",
                    "formatted_email_address":"\"SF Health Center: Triage\" \u003csfhealth+triage@threadable.com\u003e",
                    "formatted_task_email_address":"\"SF Health Center: Triage Tasks\" \u003csfhealth+triage+task@threadable.com\u003e",
                    "internal_email_address":"sfhealth+triage@threadable.com",
                    "internal_task_email_address":"sfhealth+triage+task@threadable.com",
                    "conversations_count":11,
                    "members_count":11,
                    "organization_slug":"sfhealth",
                    "current_user_is_a_member":false
                  },
                  {
                    "id":1,
                    "slug":"social",
                    "name":"Social",
                    "email_address_tag":"social",
                    "subject_tag":"SFHealth+Social",
                    "color":"#3498db",
                    "auto_join":true,
                    "hold_messages":true,
                    "alias_email_address":"",
                    "webhook_url":"",
                    "email_address":"sfhealth+social@threadable.com",
                    "task_email_address":"sfhealth+social+task@threadable.com",
                    "formatted_email_address":"\"SF Health Center: Social\" \u003csfhealth+social@threadable.com\u003e",
                    "formatted_task_email_address":"\"SF Health Center: Social Tasks\" \u003csfhealth+social+task@threadable.com\u003e",
                    "internal_email_address":"sfhealth+social@threadable.com",
                    "internal_task_email_address":"sfhealth+social+task@threadable.com",
                    "conversations_count":8,
                    "members_count":17,
                    "organization_slug":"sfhealth",
                    "current_user_is_a_member":true
                  }
                ]
              }
            ],
            "dismissed_welcome_modal":true
          }
        }

# Group Organization Members
Coming soon!

## Organization Members Collection [/api/organization_members]
## Organization Member [/api/organization_members/{id}]

# Group Group Members
Coming soon!

## Group Members Collection [/api/group_members]
## Group Member [/api/group_members/{id}]

# Group Task Doers
Coming soon!

## Task Doers Collection [/api/task_doers]
## Task Doer [/api/task_doers/{id}]

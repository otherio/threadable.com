%ol
  - items.each do |type, item|
    - case type
    - when :message
      %li.with_message
        = render_widget(:message, item)
    - when :event
      %li.with_event
        %span.event
          - if item.actor.present?
            - case item.event_type
            - when :conversation_created
              #{strong(item.actor.name)} started this conversation
            - when :task_created
              #{strong(item.actor.name)} created this task
            - when :task_done
              %i.icon-ok.finished-check
              #{strong(item.actor.name)} marked this task as done
            - when :task_undone
              %i.icon-ok.unfinished-check
              #{strong(item.actor.name)} marked this task as not done
            - when :task_added_doer
              #{strong(item.actor.name)} added #{strong(item.doer.name)} as a doer
            - when :task_removed_doer
              #{strong(item.actor.name)} removed #{strong(item.doer.name)} as a doer
            - else
              - raise "unknown event type #{item.event_type.inspect}"

          %span.pull-right
            = timeago item.created_at

= render_widget :new_conversation_message, conversation, from: from

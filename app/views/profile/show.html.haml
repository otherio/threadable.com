%p
  This page is admittedly terrible. It's on the chopping block, and soon will be part of your usual app experience.
%p
  Click this to go back there
  = link_to 'Take me back!', root_path, class: 'btn btn-primary'
.row

  .well.span5
    %h2 Profile
    = simple_form_for current_user, url: current_url do |f|
      = f.input :name
      = f.input :munge_reply_to?, as: :select, :collection => [['The original sender',false],['The group',true]], :include_blank => false, :label => "When you reply to an email, it should go to:"
      = f.submit :Update, class: 'btn btn-primary'

  .well.span5
    %h2 Password
    = simple_form_for current_user, url: current_url do |f|
      = f.input :current_password
      = f.input :password
      = f.input :password_confirmation
      = f.submit 'Change password', class: 'btn btn-primary'

.well
  %h2 Email addresses

  %small Messages from any of these addresses will be associated with you, however we will only ever email you at your primary email address.

  %table.email-addresses.table
    %thead
      %tr
        %th Address
        %th Primary?
        %th Confirmed?

    %tbody
      - current_user.email_addresses.all.sort_by(&:address).each do |email_address|
        %tr
          %td= email_address.address
          %td
            - if email_address.primary?
              primary
            - elsif email_address.confirmed?
              = link_to 'make primary', email_address_path(email_address:{ address: email_address.address, primary:1 }), data:{method:'patch'}
          %td
            - if email_address.confirmed?
              confirmed
            - else
              = link_to 'resend confirmation email', resend_email_address_confirmation_path(email_address:{ address: email_address.address }), data:{method:'post'}

  = form_for current_user.email_addresses.new, url: email_addresses_path, html: { class: 'form-inline' } do |f|
    = f.text_field :address, placeholder: 'my.email@example.com', type: 'email', required: true
    = f.submit :Add, class: 'btn btn-primary', value: 'Add'

  %small
    * If you need to delete an email address from your account please email us at
    = mail_to threadable.support_email_address

.well
  %h2 Connected Accounts

  %small Other services that you've authorized to share data with Threadable

  - if current_user.external_authorizations.all.length > 0
    %table.authorizations.table
      %thead
        %tr
          %th Service
          %th Account
      %tbody
        - current_user.external_authorizations.all.each do |auth|
          %tr
            %td= auth.provider
            %td= "#{auth.name} (#{auth.nickname}) &lt;#{auth.email_address}&gt;".html_safe
  - else
    .no-accounts
      <b>You have no connected accounts.</b>

  .connect
    Add or update a connected account:
    %a{href: '/auth/trello'}
      Trello

.well
  %h2 API Access Token


  - if current_user.api_access_token.present?
    %input.api-access-token{type:'text', name: 'api_access_token', value: current_user.api_access_token}
    = form_tag api_access_tokens_path, method: 'post' do
      = submit_tag :Regenerate, class: 'btn btn-primary', 'data-confirm' => 'This will disable your current api access token. Are you sure?'

  - else
    %small Generate an access token to use Threadable through our API.
    = form_tag api_access_tokens_path, method: 'post' do
      = submit_tag :Generate, class: 'btn btn-primary'

:sass
  table.email-addresses
    td, th
      white-space: nowrap
  .well
    overflow: hidden
  .api-access-token
    width: 20em

:javascript
  $(function(){
    $('.api-access-token').on('click', function(e){
      $(this).select();
    });
    $('.api-access-token').on('keydown', function(e){
      e.preventDefault();
    });
  });

.uk-container-center.uk-width-large-1-3.uk-width-medium-1-2
  .well-when-not-small
    - if @email_action.user
      .uk-clearfix
        .uk-float-left
          .avatar{style: "margin-right: 1em"}
            = image_tag @email_action.user.avatar_url
        .uk-float-left
          %h2 Hey #{@email_action.user.name}
          %div #{@email_action.user.email_address}

  %h3 Please sign in to #{@email_action.pending_description}

  .uk-form.uk-form-stacked.well-when-not-small
    = form_tag sign_in_path, method: 'POST' do
      %input{type: 'hidden', name: 'r', value: current_url}
      %fieldset
        .uk-form-row
          %input.uk-width-1-1.uk-form-large{placeholder: "Email", type: "email", name: 'authentication[email_address]', value: @email_action.user.email_address}/
        .uk-form-row
          %input.uk-width-1-1.uk-form-large{placeholder: "Password", type: "password", name: 'authentication[password]', autofocus: true}/
        .uk-form-row
          %a.uk-float-right{href: "/forgot_password"}
            No password yet?
            %br/
            Forgot password?
          %input.uk-button.uk-button-primary.uk-button-large.sign-in-button{type: "submit", value: "Sign in &#{@email_action.type}"}/

  %h3 Or:
  .well-when-not-small
    %p
      You can #{@email_action.pending_description} via email! Just reply to the conversation and add
      %br/
      %input.example-command{type: 'text', value: @email_action.example_command}
      %br/
      to the top of your response.


:javascript

  $(function(){

    var
      exampleCommandInput = $('.example-command'),
      value = exampleCommandInput.val(),
      timeout;

    function selectAll(){
      exampleCommandInput.val(value);
      exampleCommandInput[0].select();
    }

    exampleCommandInput.on('click focus', function(event){
      if (timeout) return;
      selectAll();
      timeout = setInterval(selectAll, 200);

    });

    exampleCommandInput.on('blur', function(event){
      clearTimeout(timeout);
      timeout = null;
    });

    exampleCommandInput.on('keydown keydown change', function(event){
      event.preventDefault();
      return false;
    });


  });
